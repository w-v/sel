#!/usr/bin/env python3

import subprocess
import argparse
import sys
import json
from functools import reduce

def is_not_empty(arr):
    return (isinstance(arr, bool) and arr) or arr["type"] == "file" or(arr["type"] == "directory" and "contents" in arr and arr["contents"] and reduce(lambda a,b : is_not_empty(a) and is_not_empty(b), arr["contents"]))

def cleanup(json):
    return list(map(remove_meta, json))

def remove_meta(e):
    if e["type"] == "directory" :
        return cleanup(e["contents"]) 
    else:
        return e["name"]


def read_args(args):
    parser=argparse.ArgumentParser(description='arg parsing')
    parser.add_argument("path", help="path to the root of the tree")
    parser.add_argument("-d", "--depth",help="max depth of json tree")
    return parser.parse_args(sys.argv[1:])

args = read_args(sys.argv[1:])
path=args.path
cmd=['tree', '-J', "--noreport","-f", path]
if args.depth:
    cmd.insert(1,str(args.depth))
    cmd.insert(1,"-L")

out = subprocess.Popen(cmd,stdout=subprocess.PIPE,stderr=subprocess.STDOUT)
st,str=out.communicate()
b = st.decode()
o=json.loads(b)
a=cleanup(o)
print(json.dumps(a))
